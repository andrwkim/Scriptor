#!/bin/bash

BASE_DIR=$(dirname "$0")
COLLECTION_DIR=$BASE_DIR/collections
LOG_FILE=$BASE_DIR/logs/main
VERSION="0.3.0"

# FUNCTIONS
# handle errors
throw_error(){
    echo "'$1' command not recognised."
    --help
}

# create new collection
create(){
    if [ -z "$1" ]
    then
        echo "spr create: missing operand"
        --help
    else
        name=$1
        content="
        # INTRO
        \n
        echo \"Welcome to $name!\"
        "

        if ! mkdir $COLLECTION_DIR/$name/ &> $LOG_FILE
        then
            # create directory for sub-scripts
            echo "Collection does not exist!"
        else
            # create file for package with content
            file="$COLLECTION_DIR/$name.sh"
            echo -e $content >> $file
            echo "'$name' was added"
        fi
    fi
}

# remove collection and associated scripts
delete(){
    if [ -z "$1" ]
    then
        echo "spr delete: missig operand"
        --help
    else
        read -p "Are you sure you want to delete '$1' collection? (Y/N)" -n 1 -r
        echo    # (optional) move to a new line
        if [[ ! $REPLY =~ ^[Yy]$ ]]
        then
            echo "delete aborted"
            exit 1
        fi
        echo "Deleting..."
        # delete packag directory
        rm -r $COLLECTION_DIR/$1/
        # delete main package file
        rm $COLLECTION_DIR/$1.sh
        echo "Completed!"
    fi
}

# show welcome message if no parmeters are provided
if [ -z "$1" ]
then
    echo ""
    echo "|##################################################################|"
    echo "|                                                                  |"
    echo "| Welcome to Scriptor!                                             |"
    echo "| A simple shell script manager                                     |"
    echo "|                                                                  |"
    echo "|##################################################################|"
    echo -e "\n"
    # include help menu
    --help
else
    # check validity of first parameter
    if $1 &> $LOG_FILE
    then
        # check if 2nd parameter has been provided
        if [ ! -z $2 ]
        then
            $1 $2 || throw_error $2
        else
            if $1 &> $LOG_FILE
            then
                $1
            else
                throw_error $1
            fi
        fi
    elif [ -f $COLLECTION_DIR/$1.sh 2> $LOG_FILE ]
    then
        if [ $2 == '--delete' ]
        then
            --delete $1 $3
        else
            $2 $1 $3 2> $LOG_FILE || throw_error $2
        fi
    else
        echo "spr: '$1' is not a valid command."
        --help
    fi
fi